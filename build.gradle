plugins {
    id 'java'

    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
}

sourceCompatibility = '11'
targetCompatibility = '11'

group = 'me.jamiemansfield'
version = '0.0.1-indev'

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 1, 'hours'
}

repositories {
    mavenCentral()
    maven {
        url 'https://files.minecraftforge.net/maven/'
    }
    if (surveyVersion.endsWith('-SNAPSHOT') || atlasVersion.endsWith('-SNAPSHOT')) {
        maven {
            url 'https://oss.sonatype.org/content/groups/public/'
        }
    }
}

dependencies {
    // Survey (binary remapper)
    compile("org.cadixdev:bombe:$bombeVersion")
    compile("org.cadixdev:bombe-jar:$bombeVersion")
    compile("org.cadixdev:lorenz:$lorenzVersion")
    compile("org.cadixdev:atlas:$atlasVersion") {
        exclude(module: "asm-commons")
        exclude(module: "bombe")
        exclude(module: "bombe-jar")
    }
    compile("org.cadixdev:survey:$surveyVersion"){
        exclude(module: "lorenz")
        exclude(module: "lorenz-asm")
        exclude(module: "atlas")
        exclude(module: "bombe-jar")
    }

    // ASM
    compile "org.ow2.asm:asm-commons:$asmVersion"

    // Decompilers
    compile 'net.minecraftforge:forgeflower:1.5.380.24'
    compile 'org.bitbucket.mstrobel:procyon-compilertools:0.5.36'
    compile 'org.benf:cfr:0.150'
    compile "org.ow2.asm:asm-util:$asmVersion"

    // Spoon (Java AST)
    compile 'fr.inria.gforge.spoon:spoon-core:8.2.0'

    // RichTextFX (syntax highlighting)
    compile 'org.fxmisc.richtext:richtextfx:0.10.5'

    // ControlsFX (JavaFX utility)
    compile 'org.controlsfx:controlsfx:8.40.14'

    // Feather Icons (see https://feathericons.com/)
    compile 'org.kordamp.ikonli:ikonli-javafx:2.4.0'
    compile 'org.kordamp.ikonli:ikonli-feather-pack:2.4.0'

    // Unit Testing (junit5)
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

javafx {
    version = '14'
    modules = [ 'javafx.controls' ]
}

test {
    //useJUnitPlatform()
}

processResources {
    from 'LICENSE.txt'
}

jar {
    manifest {
        attributes(
                'Implementation-Title': name,
                'Implementation-Version': version,
                'Main-Class': 'me.jamiemansfield.symphony.SymphonyMain'
        )
    }
}

artifacts {
    archives shadowJar
}
