buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
    }
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

group = 'me.jamiemansfield'
version = '0.0.1-indev'

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 1, 'hours'
}

repositories {
    mavenCentral()
    maven {
        url 'https://files.minecraftforge.net/maven/'
    }
    if (surveyVersion.endsWith('-SNAPSHOT') || atlasVersion.endsWith('-SNAPSHOT')) {
        maven {
            url 'https://oss.sonatype.org/content/groups/public/'
        }
    }
}

dependencies {
    // Survey (binary remapper)
    compile("org.cadixdev:survey:$surveyVersion")
    compile("org.cadixdev:atlas:$atlasVersion") {
        transitive = false
    }

    // Decompilers
    compile 'net.minecraftforge:forgeflower:1.5.380.24'
    compile 'org.bitbucket.mstrobel:procyon-compilertools:0.5.35'
    compile 'org.benf:cfr:0.148'
    compile 'org.ow2.asm:asm-util:7.0'

    // RichTextFX (syntax highlighting)
    compile 'org.fxmisc.richtext:richtextfx:0.6.10'

    // ControlsFX (JavaFX utility)
    compile 'org.controlsfx:controlsfx:8.40.14'

    // Feather Icons (see https://feathericons.com/)
    compile 'org.kordamp.ikonli:ikonli-javafx:2.4.0'
    compile 'org.kordamp.ikonli:ikonli-feather-pack:2.4.0'

    // Unit Testing (junit5)
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test {
    //useJUnitPlatform()
}

processResources {
    from 'LICENSE.txt'
}

jar {
    manifest {
        attributes(
                'Implementation-Title': name,
                'Implementation-Version': version,
                'Main-Class': 'me.jamiemansfield.symphony.SymphonyMain'
        )
    }
}

artifacts {
    archives shadowJar
}
